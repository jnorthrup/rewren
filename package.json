{
  "name": "@rewren/rewren-cli",
  "version": "0.0.1-alpha.13",
  "engines": {
    "node": ">=20"
  },
  "type": "module",
  "workspaces": [
    "packages/*"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rewren/rewren-cli.git"
  },
  "config": {
    "sandboxImageUri": "us-docker.pkg.dev/gemini-code-dev/gemini-cli/sandbox:0.0.1-alpha.13"
  },
  "scripts": {
  "start": "node scripts/start.js",
  "start:real": "node packages/cli/dist/index.js",
    "debug": "cross-env DEBUG=1 node --inspect-brk scripts/start.js",
    "auth:npm": "npx google-artifactregistry-auth",
    "auth:docker": "gcloud auth configure-docker us-west1-docker.pkg.dev",
    "auth": "npm run auth:npm && npm run auth:docker",
    "generate": "node scripts/generate-git-commit-info.js",
    "build": "node scripts/build.js",
    "build:all": "npm run build && npm run build:sandbox",
    "build:packages": "npm run build --workspaces",
    "build:sandbox": "node scripts/build_sandbox.js --skip-npm-install-build",
    "bundle": "npm run generate && node esbuild.config.js && node scripts/copy_bundle_assets.js",
    "test": "npm run test --workspaces",
    "test:ci": "npm run test:ci --workspaces --if-present && npm run test:scripts",
    "test:scripts": "vitest run --config ./scripts/tests/vitest.config.ts",
    "test:e2e": "npm run test:integration:sandbox:none -- --verbose --keep-output",
    "test:integration:all": "npm run test:integration:sandbox:none && npm run test:integration:sandbox:docker && npm run test:integration:sandbox:podman",
    "test:integration:sandbox:none": "WREN_SANDBOX=false node integration-tests/run-tests.js",
    "test:integration:sandbox:docker": "WREN_SANDBOX=docker node integration-tests/run-tests.js",
    "test:integration:sandbox:podman": "WREN_SANDBOX=podman node integration-tests/run-tests.js",
    "test:qa-tui": "node scripts/qa-tui.mjs",
    "test:qa": "node scripts/qa-comprehensive.mjs",
    "test:qa-robot": "node scripts/qa-robot.mjs",
    "robot": "node scripts/tui-robot.mjs",
    "test-env": "bash scripts/tmux-test-env.sh",
    "qa-env": "bash scripts/tmux-qa-layout.sh",
    "launch-test": "bash scripts/launch-test-terminal.sh",
    "launch-qa": "bash scripts/launch-test-terminal.sh qa",
    "workspace": "node packages/cli/src/ui/tmux-workspace/server.mjs",
    "ai-surgery": "node scripts/ai-embodiment-demo.mjs",
    "embodiment-mdi": "bash scripts/embodiment-workspace.sh",
    "qa-provider-tree": "node scripts/qa-provider-tree.mjs",
    "lint": "eslint . --ext .ts,.tsx && eslint integration-tests",
    "lint:fix": "eslint . --fix && eslint integration-tests --fix",
    "lint:ci": "eslint . --ext .ts,.tsx --max-warnings 0 && eslint integration-tests --max-warnings 0",
    "format": "prettier --write .",
    "typecheck": "npm run typecheck --workspaces --if-present",
    "preflight": "npm run clean && npm ci && npm run format && npm run lint:ci && npm run build && npm run typecheck && npm run test:ci",
    "prepare:package": "node scripts/prepare-package.js",
    "release:version": "node scripts/version.js",
    "telemetry": "node scripts/telemetry.js",
    "clean": "node scripts/clean.js"
  },
  "bin": {
    "rewren": "bundle/rewren.js"
  },
  "files": [
    "bundle/",
    "README.md",
    "LICENSE"
  ],
  "devDependencies": {
    "@eslint/js": "^9.38.0",
    "@types/micromatch": "^4.0.9",
    "@types/mime-types": "^3.0.1",
    "@types/minimatch": "^5.1.2",
    "@types/semver": "^7.7.0",
    "@types/shell-quote": "^1.7.5",
    "@types/uuid": "^10.0.0",
    "@vitest/coverage-v8": "^3.1.1",
    "concurrently": "^9.2.0",
    "cross-env": "^10.1.0",
    "esbuild": "^0.25.0",
    "eslint": "^9.24.0",
    "eslint-config-prettier": "^10.1.2",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-license-header": "^0.8.0",
    "glob": "^10.4.5",
    "globals": "^16.0.0",
    "json": "^11.0.0",
    "lodash": "^4.17.21",
    "memfs": "^4.17.2",
    "minimatch": "^10.0.3",
    "prettier": "^3.5.3",
    "typescript-eslint": "^8.30.1",
    "vitest": "^3.2.4",
    "yargs": "^18.0.0"
  },
  "dependencies": {
    "@rewren/rewren-cli": "^0.0.1-alpha.13"
  },
  "overrides": {
    "minimatch": "^9.0.5"
  },
  "publishConfig": {
    "access": "public"
  }
}
